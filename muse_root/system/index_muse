#! /bin/bash
##############################################################
##
## Name         :   index_muse
## Author       :   Bradley Atkins
## Description  :   Index all vars, functions and files at
##                  build time. Run from deployment dir
## Date         :   18/04/2014
## Args         :   
## Status       :   Reviewed    [n]
##                  Tested      [n]
##                  Released    [n]
##############################################################

error_exit()
{
    echo "$(date): ERROR: ${1}"
    exit 1
}

#======================================
# Find the DB and confirm it is writable
#======================================
[[ -w muse_root/data/master.db ]] || error_exit "Master DB not found or writable. Exiting"
[[ -f muse_root/data/master.db.bac ]] || error_exit "Master DB copy not found or writable. Exiting"
which sqlite3 >/dev/null || error_exit "sqlite3 not found"

ROOTDIR="/usr/local/bin/"
TMPFILE=/tmp/index_muse.tmp
DBFILE="muse_root/data/master.db"
CPFILE="muse_root/data/master.db.bac"
DB="sqlite3 ${DBFILE} "

cp "${CPFILE}" "${DBFILE}" || error_exit "Failed to overwrite db file"

#======================================
# The main muse repo
#======================================
DIRS="bin common conf data docs lib master resources slave system test utils"

for DIR in ${DIRS}
do
    find muse_root/${DIR} -type f | while read FILE
	do
		TO=20
		while ! ${DB} > "${TMPFILE}" 2>&1 <<-EOF
			insert into core_file_mappings (path) values ('${ROOTDIR}${FILE}');
		EOF
		do
			[[ $((TO -=1)) -le 0 ]] && error_exit "Insert failed"
		done
	done 
done

#======================================
# core function mappings
#======================================
for DIR in ${DIRS}
do
	find muse_root/${DIR} -type f -name \*.funcs | while read FILE
	do
		sed -n '/## Name[\t ]*:[\t ]*m_/p' "${FILE}" | sed 's/\(## Name[\t ]*:\)//g' | sort |  while read FNAME
		do
			TO=20
			while ! ${DB} > "${TMPFILE}" 2>&1 <<-EOF
				insert into core_function_mappings (file, name, type) values ('${ROOTDIR}${FILE}', '${FNAME}', 'DEFINITION');
			EOF
			do
				[[ $((TO -=1)) -le 0 ]] && error_exit "Insert failed"
			done
		done
	done

done
