#! /bin/bash
##############################################################
##
## Name         :   assert-integer.funcs
## Author       :   Bradley Atkins
## Description  :   MUNIT test assertions library
## Date         :   02/08/2015
## Status       :   Reviewed    [n]
##                  Tested      [n]
##                  Released    [n]
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, version 2 only.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  
## USA
##
##############################################################

##############################################################
##
## Name         :   assert_equal_integer
## Author       :   Bradley Atkins
## Description  :   Test two integers for equality
## Date         :   04/08/2015
## Args         :   1 - <reference integer>
##                  2 - <Integer under test>
##                  3 - [Err msg]
## Status       :   Reviewed    [n]
##                  Tested      [n]
##                  Released    [n]
##                  Disabled    [n]
##############################################################
assert_equal_integer()
{
    MU_ASSERTIONS=$(( MU_ASSERTIONS +1 ))
    [[ "${1}" -eq "${2}" ]] && return 0

    MU_FAILURES=$(( MU_FAILURES +1 ))
    printf "%s\n%s\n\n" "Expected (${1}) == (${2}) but got (${1}) != (${2})" "${3}"
    
} >> "${MU_TMP}/${THIS_TEST_NAME}.rpt"
##############################################################
##
## Name         :   assert_not_equal_integer
## Author       :   Bradley Atkins
## Description  :   Test two integers for inequality
## Date         :   04/08/2015
## Args         :   1 - <reference integer>
##                  2 - <Integer under test>
##                  3 - [Err msg]
## Status       :   Reviewed    [n]
##                  Tested      [n]
##                  Released    [n]
##                  Disabled    [n]
##############################################################
assert_not_equal_integer()
{
    MU_ASSERTIONS=$(( MU_ASSERTIONS +1 ))
    [[ "${1}" -ne "${2}" ]] && return 0

    MU_FAILURES=$(( MU_FAILURES +1 ))
    printf "%s\n%s\n\n" "Expected (${1}) != (${2}) but got (${1}) == (${2})" "${3}"
    
} >> "${MU_TMP}/${THIS_TEST_NAME}.rpt"
##############################################################
##
## Name         :   assert_greater_than_integer
## Author       :   Bradley Atkins
## Description  :   Test integer is greater
## Date         :   04/08/2015
## Args         :   1 - <reference integer>
##                  2 - <Integer under test>
##                  3 - [Err msg]
## Status       :   Reviewed    [n]
##                  Tested      [n]
##                  Released    [n]
##                  Disabled    [n]
##############################################################
assert_greater_than_integer()
{
    MU_ASSERTIONS=$(( MU_ASSERTIONS +1 ))
    [[ "${2}" -gt "${1}" ]] && return 0

    MU_FAILURES=$(( MU_FAILURES +1 ))
    printf "%s\n%s\n\n" "Expected (${2}) > (${1}) but got (${2}) <= (${1})" "${3}"
    
} >> "${MU_TMP}/${THIS_TEST_NAME}.rpt"
##############################################################
##
## Name         :   assert_greater_than_or_equal_integer
## Author       :   Bradley Atkins
## Description  :   Test integer is greater
## Date         :   04/08/2015
## Args         :   1 - <reference integer>
##                  2 - <Integer under test>
##                  3 - [Err msg]
## Status       :   Reviewed    [n]
##                  Tested      [n]
##                  Released    [n]
##                  Disabled    [n]
##############################################################
assert_greater_than_or_equal_integer()
{
    MU_ASSERTIONS=$(( MU_ASSERTIONS +1 ))
    [[ "${2}" -ge "${1}" ]] && return 0

    MU_FAILURES=$(( MU_FAILURES +1 ))
    printf "%s\n%s\n\n" "Expected (${2}) >= (${1}) but got (${2}) < (${1})" "${3}"
    
} >> "${MU_TMP}/${THIS_TEST_NAME}.rpt"
##############################################################
##
## Name         :   assert_less_than_integer
## Author       :   Bradley Atkins
## Description  :   Test integer is smaller
## Date         :   04/08/2015
## Args         :   1 - <reference integer>
##                  2 - <Integer under test>
##                  3 - [Err msg]
## Status       :   Reviewed    [n]
##                  Tested      [n]
##                  Released    [n]
##                  Disabled    [n]
##############################################################
assert_less_than_integer()
{
    MU_ASSERTIONS=$(( MU_ASSERTIONS +1 ))
    [[ "${2}" -lt "${1}" ]] && return 0

    MU_FAILURES=$(( MU_FAILURES +1 ))
    printf "%s\n%s\n\n" "Expected (${2}) < (${1}) but got (${2}) >= (${1})" "${3}"
    
} >> "${MU_TMP}/${THIS_TEST_NAME}.rpt"
##############################################################
##
## Name         :   assert_less_than_or_equal_integer
## Author       :   Bradley Atkins
## Description  :   Test integer is smaller
## Date         :   04/08/2015
## Args         :   1 - <reference integer>
##                  2 - <Integer under test>
##                  3 - [Err msg]
## Status       :   Reviewed    [n]
##                  Tested      [n]
##                  Released    [n]
##                  Disabled    [n]
##############################################################
assert_less_than_or_equal_integer()
{
    MU_ASSERTIONS=$(( MU_ASSERTIONS +1 ))
    [[ "${2}" -le "${1}" ]] && return 0

    MU_FAILURES=$(( MU_FAILURES +1 ))
    printf "%s\n%s\n\n" "Expected (${2}) <= (${1}) but got (${2}) > (${1})" "${3}"
    
} >> "${MU_TMP}/${THIS_TEST_NAME}.rpt"


